install_github("trinker/qdap")
# You may need to run
# sudo ln -f -s $(/usr/libexec/java_home)/jre/lib/server/libjvm.dylib /usr/local/lib
# in order to load qdap
library("qdap")
knitr::opts_chunk$set(echo = TRUE)
df <- data.frame(a = c(1, 1, NA, NA, 63),
b = c(2, -17, 11, 57, NA),
c = c(5, 9, 4, NA, NA))
apply(df,2,function(x)x[max(which(!is.na(x)))])
df
apply(df,2,function(x)x[tail(which(!is.na(x)))])
df
df
apply(df,2,function(x)x[tail(which(!is.na(x)))])
df[, lapply(.SD, function(x) tail(x[!is.na(x)],1))]
typeof(df)
df = as.data.table(df)
df <- data.frame(a = c(1, 1, NA, NA, 63),
b = c(2, -17, 11, 57, NA),
c = c(5, 9, 4, NA, NA))
df
install.packages("data.tree")
library(data.table)
load("C:\Users\okego\Desktop\Spring2020-Project2-group-6\output\QR_1519_rename.RData")
load("C:\\Users\\okego\\Desktop\\Spring2020-Project2-group-6\\output\\QR_1519_rename.RData")
View(QR_1519_rename)
df <- QR_1519_rename[1:7]
df
df <- QR_1519_rename[3:7]
df
library(data.table)
df = as.data.table(df)
df[lapply(.SD, function(x) tail(x[!is.na(x)],1)),]
apply(df,1,function(x)x[tail(which(!is.na(x)))])
df <- QR_1519_rename[3:7]
df1 <- apply(df,1,function(x)x[tail(which(!is.na(x)))])
df1
df <- data.frame(df)
df
df1 <- apply(df,2,function(x)x[max(which(!is.na(x)))])
df1
df1 <- apply(df,2,function(x)x[tail(which(!is.na(x)))])
df1
indx <- which(!is.na(df), arr.ind=TRUE)
df1 <- df[cbind(1:nrow(df1),tapply(indx[,2], indx[,1], FUN=max))]
df <- QR_1519_rename[3:7]
df <- data.frame(df)
indx <- which(!is.na(df), arr.ind=TRUE)
df1 <- df[cbind(1:nrow(df1),tapply(indx[,2], indx[,1], FUN=max))]
indx <- which(!is.na(df), arr.ind=TRUE)
df1 <- df[cbind(1:nrow(df),tapply(indx[,2], indx[,1], FUN=max))]
df1
ncol(df)
ncol(QR_1519_rename)
df <- QR_1519_rename[3:7]
df <- data.frame(df)
indx <- which(!is.na(df), arr.ind=TRUE)
df1 <- df[cbind(1:nrow(df),tapply(indx[,2], indx[,1], FUN=max))]
df1
indx
shiny::runApp('C:/Users/okego/Desktop/Spring2020-Project2-group-6/app1')
shiny::runApp()
shiny::runApp()
load("C:/Users/59446/Documents/GitHub/Spring2020-Project2-group-6/output/house_processed.RData")
View(processed_price)
library(tigris)
char_zips <- zctas(cb = TRUE, starts_with = "1")
processed_price<-mutate(processed_price,price = median(c(2,3,4,5,6,7),na.rm = T))
names(processed_price)
processed_price<-mutate(processed_price,price = median(c(`ONE FAMILY DWELLINGS`,`TWO FAMILY DWELLINGS`,`THREE FAMILY DWELLINGS`,`RENTALS - WALKUP APARTMENTS`,`RENTALS - ELEVATOR APARTMENTS`,`RENTALS - 4-10 UNIT`),na.rm = T))
a<-processed_price%>%select(2:7)
View(a)
b<-rowM
b<-rowMeans(a)
b<-rowMeans(a,na.rm = T)
processed_price<-processed_price%>%mutate(price = b)
View(processed_price)
char_zips <- geo_join(char_zips,
processed_price,
by_sp = "GEOID10",
by_df = 'ZIP CODE',
how = "inner")
save(processed_price,file ='C:/Users/59446/Documents/GitHub/Spring2020-Project2-group-6/output/zip_code.RData')
save(char_zips,file ='C:/Users/59446/Documents/GitHub/Spring2020-Project2-group-6/output/zip_code.RData')
runApp()
View(processed_price)
runApp()
View(char_zips)
runApp()
runApp()
shiny::runApp()
install.packages("fmsb")
shiny::runApp()
qr_radar <- function(bn) {
qr_df <- df %>%
filter (BN == bn)
tit <- qr_df$location_name
qr_df <- qr_df[-c(1,2)]
qr_df <- as.numeric(as.character(qr_df))
data <- data.frame(matrix(qr_df,ncol = 5))
colnames(data) <- c("Curriculum","Pedagogy","Assessment","Expectation","Leadership")
data <- rbind(rep(5,5) , rep(0,5) ,data)
radarchart(data, axistype=1 ,
#custom polygon
pcol=rgb(0.2,0.5,0.5,0.9) , pfcol=rgb(0.2,0.5,0.5,0.5) , plwd=4 ,
#custom the grid
cglcol="black", cglty=1, axislabcol="black", caxislabels=c(0,1,2,3,4,5), cglwd=0.8,
#custom labels
vlcex=1.05,
title = "Quality Review"
)
}
qr('M015')
qr_radar('M015')
runApp()
qr_df <- df %>%
filter (BN == 'M019')
tit <- qr_df$location_name
qr_df <- qr_df[-c(1,2)]
qr_df <- as.numeric(as.character(qr_df))
data <- data.frame(matrix(qr_df,ncol = 5))
colnames(data) <- c("Curriculum","Pedagogy","Assessment","Expectation","Leadership")
data <- rbind(rep(5,5) , rep(0,5) ,data)
View(data)
radarchart(data, axistype=1 ,
#custom polygon
pcol=rgb(0.2,0.5,0.5,0.9) , pfcol=rgb(0.2,0.5,0.5,0.5) , plwd=4 ,
#custom the grid
cglcol="black", cglty=1, axislabcol="black", caxislabels=c(0,1,2,3,4,5), cglwd=0.8,
#custom labels
vlcex=1.05,
title = "Quality Review"
)
qr_df <- df %>%
filter (BN == 'M019')
tit <- qr_df$location_name
qr_df <- qr_df[-c(1,2)]
qr_df <- as.numeric(as.character(qr_df))
data <- data.frame(matrix(qr_df,ncol = 5))
colnames(data) <- c("Curriculum","Pedagogy","Assessment","Expectation","Leadership")
View(data)
data
data[1]
data[[1]]
data[[1,1:5]]
data[1,1:5]
as.vector(data)
qr_df <- df %>%
filter (BN == 'M019')
tit <- qr_df$location_name
qr_df <- qr_df[-c(1,2)]
qr_df <- as.numeric(as.character(qr_df))
data <- data.frame(matrix(qr_df,ncol = 5))
data
qr_df <- df %>%
filter (BN == 'M019')
tit <- qr_df$location_name
qr_df <- qr_df[-c(1,2)]
qr_df <- as.numeric(as.character(qr_df))
data <- data.frame(matrix(qr_df,ncol = 5))
colnames(data) <- c("Curriculum","Pedagogy","Assessment","Expectation","Leadership")
View(data)
p <- plot_ly(
type = 'scatterpolar',
fill = 'toself'
) %>%
add_trace(
r = data,
theta = names(data),
name = 'Group A'
) %>%
layout(
polar = list(
radialaxis = list(
visible = T,
range = c(0,5)
)
)
)
p
p <- plot_ly(
type = 'scatterpolar',
fill = 'toself',
) %>%
add_trace(
r = data,
theta = names(data),
name = 'Group A'
) %>%
layout(
polar = list(
radialaxis = list(
visible = T,
range = c(0,5)
)
)
)
p
p <- plot_ly(
type = 'scatterpolar',
fill = 'toself',
mode = 'line'
) %>%
add_trace(
r = data,
theta = names(data),
name = 'Group A'
) %>%
layout(
polar = list(
radialaxis = list(
visible = T,
range = c(0,5)
)
)
)
p
as.array(data)
as.vector(data)
qr_df <- df %>%
filter (BN == 'M019')
tit <- qr_df$location_name
qr_df <- qr_df[-c(1,2)]
qr_df <- as.numeric(as.character(qr_df))
qr_df <- df %>%
filter (BN == "M019")
tit <- qr_df$location_name
tit
qr_radar <- function(bn) {
qr_df <- df %>%
filter (BN == bn)
tit <- qr_df$location_name
qr_df <- qr_df[-c(1,2)]
qr_df <- as.numeric(as.character(qr_df))
p <- plot_ly(
type = 'scatterpolar',
fill = 'toself',
mode = 'line'
) %>%
add_trace(
rank = qr_df,
review = c("Curriculum","Pedagogy","Assessment","Expectation","Leadership"),
name = tit
) %>%
layout(
polar = list(
radialaxis = list(
visible = T,
range = c(0,5)
)
)
)
p
}
qr_radar('M019')
p <- plot_ly(
type = 'scatterpolar',
fill = 'toself',
mode = 'line'
) %>%
add_trace(
r = qr_df,
theta = c("Curriculum","Pedagogy","Assessment","Expectation","Leadership"),
name = tit
) %>%
layout(
polar = list(
radialaxis = list(
visible = T,
range = c(0,5)
)
)
)
p
}
qr_radar <- function(bn) {
qr_df <- df %>%
filter (BN == bn)
tit <- qr_df$location_name
qr_df <- qr_df[-c(1,2)]
qr_df <- as.numeric(as.character(qr_df))
p <- plot_ly(
type = 'scatterpolar',
fill = 'toself',
mode = 'line'
) %>%
add_trace(
r = qr_df,
theta = c("Curriculum","Pedagogy","Assessment","Expectation","Leadership"),
name = tit
) %>%
layout(
polar = list(
radialaxis = list(
visible = T,
range = c(0,5)
)
)
)
p
}
qr_radar('M019')
attrib1 <- c( 2, 3, 5)
attrib2 <- c( 1, 2, 5)
attrib3 <- c( 5, 2, 4)
attrib4 <- c( 4, 3, 1)
attrib5 <- c( 2, 2, 1)
teams_final <- data.frame(attrib1, attrib2, attrib3, attrib4, attrib5, attrib1)
row.names(teams_final) <- c("A Team", "B Team", "C Team")
labels <- c("attrib1", "attrib2", "attrib3", "attrib4", "attrib5", "attrib1")
library(plotly)
p <- plot_ly(
type = 'scatterpolar', fill = 'toself') %>%
add_trace(r = unname(teams_final[1, ]), theta = labels, name = "A Team",
fillcolor = 'rgba(64, 64, 64, 0.5)', marker = list(color = '#404040'),
hoverinfo = "text",
text = ~paste(labels, '<br> Importância: ', unname(teams_final[1, ]))) %>%
add_trace(r = unname(teams_final[2, ]), theta = labels, name = "B Team",
fillcolor = 'rgba(171, 35, 35, 0.5)', marker = list(color = '#AB2323'),
hoverinfo = "text",
text = ~paste(labels, '<br> Importância: ', unname(teams_final[1, ]))) %>%
add_trace(r = unname(teams_final[3, ]), theta = labels, name = "C Team",
fillcolor = 'rgba(241, 103, 69, 0.5)', marker = list(color = '#F16745'),
hoverinfo = "text",
text = ~paste(labels, '<br> Importância: ', unname(teams_final[1, ]))) %>%
layout(polar = list(radialaxis = list(visible = T, range = c(0,6))),
font = list(size = 11, color = "#202020"))
p
qr_radar <- function(bn) {
qr_df <- df %>%
filter (BN == bn)
tit <- qr_df$location_name
qr_df <- qr_df[-c(1,2)]
qr_df <- as.numeric(as.character(qr_df))
labels<- c("Curriculum","Pedagogy","Assessment","Expectation","Leadership")
p <- plot_ly(
type = 'scatterpolar',
fill = 'toself',
mode = 'line'
) %>%
add_trace(
r = qr_df,
theta = labels,
name = tit,
hoverinfo = "text",
text = ~paste(labels, '<br> Score: ', qr_df)
) %>%
layout(
polar = list(
radialaxis = list(
visible = T,
range = c(0,5)
)
)
)
p
}
qr_radar('M019')
runApp()
View(QR_1519_rename)
View(qr_df)
load('../output/qr_processed.RData')
load('../output/qr_processed.RData')
View(df)
View(SL)
View(df)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
paste0("In the Comparison page, you can",
"<br/>"," compare the information of two schools by entering/selecting",
"<br/>","their borough number (BN).")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
load('../output/final.RData')
runApp()
runApp()
runApp()
runApp()
newest_ss_radar <- function(bn){
ss <- SS_newest%>%filter(BN==bn)
tit <- ss$BN
qr_df <- ss[-c(1,2)]
qr_df <- as.numeric(as.character(qr_df))
labels<- c("Collaborative Teachers","Effective School Leadership","Rigorous Instruction",
"Supportive Environment","Strong Family-Community Ties",'Trust Score')
abbr <- c('S1','S2','S3','S4','S5','S6')
p <- plot_ly(
type = 'scatterpolar',fill = 'toself',mode = 'line') %>%
add_trace(r = qr_df,theta = abbr,name = tit,hoverinfo = "text",
text = ~paste(labels, '<br> Score: ', qr_df)) %>%
layout(title='Newest School Survey Score',
polar = list(radialaxis = list(visible = T,range = c(0,5),)))
p
}
newest_ss_radar('M019')
newest_ss_radar('M015')
View(SS_newest)
newest_ss_radar <- function(bn){
ss <- SS_newest%>%filter(BN==bn)
tit <- ss$BN
qr_df <- ss[-c(1,2)]
qr_df <- as.numeric(as.character(qr_df))
labels<- c("Collaborative Teachers","Effective School Leadership","Rigorous Instruction",
"Supportive Environment","Strong Family-Community Ties",'Trust Score')
abbr <- c('S1','S2','S3','S4','S5','S6')
p <- plot_ly(
type = 'scatterpolar',fill = 'toself',mode = 'line') %>%
add_trace(r = qr_df,theta = abbr,name = tit,hoverinfo = "text",
text = ~paste(labels, '<br> Score: ', qr_df)) %>%
layout(title='Newest School Survey Score',
polar = list(radialaxis = list(visible = T,range = c(0,5),)))
p
}
newest_ss_radar('M015')
View(df)
View(SS_newest)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
newest_ss_radar <- function(bn){
ss <- SS_newest%>%filter(BN==bn)
tit <- ss$BN
qr_df <- ss[-c(1,2)]
qr_df <- as.numeric(as.character(qr_df))
labels<- c("Collaborative Teachers","Effective School Leadership","Rigorous Instruction",
"Supportive Environment","Strong Family-Community Ties",'Trust Score')
abbr <- c('S1','S2','S3','S4','S5','S6')
p <- plot_ly(
type = 'scatterpolar',fill = 'toself',mode = 'line') %>%
add_trace(r = qr_df,theta = abbr,name = tit,hoverinfo = "text",
text = ~paste(labels, '<br> Score: ', qr_df)) %>%
layout(title='Newest School Survey Score',
polar = list(radialaxis = list(visible = T,range = c(0,5),)))
p
}
newest_ss_radar('M015')
newest_ss_radar('M014')
View(SS_newest)
newest_ss_radar('M140')
ss <- SS_newest%>%filter(BN=='M015')
tit <- ss$BN
qr_df <- ss[-c(1,2)]
qr_df <- as.numeric(as.character(qr_df))
qr_df
labels<- c("Collaborative Teachers","Effective School Leadership","Rigorous Instruction",
"Supportive Environment","Strong Family-Community Ties",'Trust Score')
abbr <- c('S1','S2','S3','S4','S5','S6')
p <- plot_ly(
type = 'scatterpolar',fill = 'toself',mode = 'line') %>%
add_trace(r = qr_df,theta = abbr,name = tit,hoverinfo = "text",
text = ~paste(labels, '<br> Score: ', qr_df)) %>%
layout(title='Newest School Survey Score',
polar = list(radialaxis = list(visible = T,range = c(0,5),)))
p <- plot_ly(
type = 'scatterpolar',fill = 'toself',mode = 'line') %>%
add_trace(r = qr_df,theta = abbr,name = tit,hoverinfo = "text",
text = ~paste(labels, '<br> Score: ', qr_df)) %>%
layout(title='Newest School Survey Score',
polar = list(radialaxis = list(visible = T,range = c(0,5))))
p
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
