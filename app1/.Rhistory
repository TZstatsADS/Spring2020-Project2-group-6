summarize(count=n())%>%
arrange(desc(count))
write.csv(x1,"C:\\Users\\okego\\Desktop\\hc.csv", row.names = FALSE)
# Solution goes here -----------
get_mse <- function(truth, estimate) {
mean((estimate - truth) ^ 2)
}
get_bias_squared <- function(estimate, truth) {
(mean(estimate) - truth)^2
}
get_var <- function(estimate) {
mean((estimate - mean(estimate)) ^ 2)
}
mse_10 <- apply(mat.pred.1,1,function(x) mean((y.test.mat[1,]-x)^2))
var_10 <- apply(mat.pred.1,1,get_var)
bias_squared_10 <- apply(mat.pred.1, 1, get_bias_squared, truth = true.f(10))
summary_10 <- cbind(mse_10,var_10,bias_squared_10)
summary_10
mse_16 <- apply(mat.pred.2,1,function(x) mean((y.test.mat[2,]-x)^2))
var_16 <- apply(mat.pred.2,1,get_var)
bias_squared_16 <- apply(mat.pred.2, 1, get_bias_squared, truth = true.f(16))
summary_16 <- cbind(mse_16,var_16,bias_squared_16)
summary_16
degree <- c(1:5)
plot(mse_10)
lines(mse_10,col=2)
degree <- c(1:5)
plot(degree,mse_10)
lines(mse_10,col=2)
lines(degree,mse_10,col=2)
abline(mse_10)
degree <- c(1:5)
plot( degree, mse_10, type="l", col="red" )
par(new=TRUE)
plot( degree, var_10, type="l", col="green" )
par(new=TRUE)
plot( degree, bias_squared_10, type="l", col="blue")
plot( degree, mse_10, type="l", col="red" )
lines( degree, var_10, col="green" )
library(ggplot2)
degree <- c(1:5)
library(ggplot2)
degree <- c(1:5)
ggplot(summary_10,aes(degree))+
geom_line(aes(y=mse_10),col='red')
typeof(summary_10)
df1 <- data.frame(summary_10)
df1
ggplot(df1,aes(degree))+
geom_line(aes(y=mse_10),col='red')
ggplot(df1,aes(degree))+
geom_line(aes(y=mse_10),col='red')+
geom_line(aes(y=var_10),col='blue')+
geom_line(aes(y=bias_squared_10),col='green')
ggplot(df1,aes(degree))+
geom_line(aes(y=mse_10),col='red')+
geom_line(aes(y=var_10),col='blue')+
geom_line(aes(y=bias_squared_10),col='green')+
theme_bw()+
labs(y = "")+
labs(x = "polynomial degree")
ggplot(df1,aes(degree))+
geom_line(aes(y=mse_10),col='red',size=5)+
geom_line(aes(y=var_10),col='blue')+
geom_line(aes(y=bias_squared_10),col='green')+
theme_bw()+
labs(y = "")+
labs(x = "polynomial degree")
ggplot(df1,aes(degree))+
geom_line(aes(y=mse_10),col='red',size=2)+
geom_line(aes(y=var_10),col='blue')+
geom_line(aes(y=bias_squared_10),col='green')+
theme_bw()+
labs(y = "")+
labs(x = "polynomial degree")
ggplot(df1,aes(degree))+
geom_line(aes(y=mse_10),col='red',size=1.5)+
geom_line(aes(y=var_10),col='blue')+
geom_line(aes(y=bias_squared_10),col='green')+
theme_bw()+
labs(y = "")+
labs(x = "polynomial degree")
ggplot(df1,aes(degree))+
geom_line(aes(y=mse_10),col='red',size=1.5)+
geom_line(aes(y=var_10),col='blue',size=1.5)+
geom_line(aes(y=bias_squared_10),col='green',size=1.5)+
theme_bw()+
labs(y = "")+
labs(x = "polynomial degree")
ggplot(df1,aes(x=degree))+
geom_line(aes(y=mse_10),col='red',size=1.5)+
geom_line(aes(y=var_10),col='blue',size=1.5)+
geom_line(aes(y=bias_squared_10),col='green',size=1.5)+
theme_bw()+
labs(y = "")+
labs(x = "polynomial degree")
ggplot(df1,aes(x=degree,fill=df1))+
geom_line(aes(y=mse_10),col='red',size=1.5)+
geom_line(aes(y=var_10),col='blue',size=1.5)+
geom_line(aes(y=bias_squared_10),col='green',size=1.5)+
theme_bw()+
labs(y = "")+
labs(x = "polynomial degree")
ggplot(df1,aes(x=degree,fill=y))+
geom_line(aes(y=mse_10),col='red',size=1.5)+
geom_line(aes(y=var_10),col='blue',size=1.5)+
geom_line(aes(y=bias_squared_10),col='green',size=1.5)+
theme_bw()+
labs(y = "")+
labs(x = "polynomial degree")
ggplot(df1,aes(x=degree,fill=))+
geom_line(aes(y=mse_10),col='red',size=1.5)+
geom_line(aes(y=var_10),col='blue',size=1.5)+
geom_line(aes(y=bias_squared_10),col='green',size=1.5)+
theme_bw()+
labs(y = "")+
labs(x = "polynomial degree")+
theme(legend.position = "bottom")
ggplot(df1,aes(x=degree,fill=))+
geom_line(aes(y=mse_10),col='red',size=1.5)+
geom_line(aes(y=var_10),col='blue',size=1.5)+
geom_line(aes(y=bias_squared_10),col='green',size=1.5)+
theme_bw()+
labs(y = "")+
labs(x = "polynomial degree")+
theme(legend.position = "bottom")+
scale_color_manual(values = c("red", "green","blue"))
ggplot(df1,aes(x=degree))+
geom_line(aes(y=mse_10),col='red',size=1.5)+
geom_line(aes(y=var_10),col='blue',size=1.5)+
geom_line(aes(y=bias_squared_10),col='green',size=1.5)+
theme_bw()+
labs(y = "")+
labs(x = "polynomial degree")+
theme(legend.position = "bottom")+
scale_color_discrete(labels = c("MSE", "Variance","Bias"))
ggplot(df1,aes(x=degree))+
geom_line(aes(y=mse_10),col='red',size=1)+
geom_line(aes(y=var_10),col='blue',size=1.5)+
geom_line(aes(y=bias_squared_10),col='green',size=1.5)+
theme_bw()+
labs(y = "")+
labs(x = "polynomial degree")+
theme(legend.position = "bottom")+
scale_color_discrete(labels = c("MSE", "Variance","Bias"))
ggplot(df1,aes(x=degree))+
geom_line(aes(y=mse_10),col='red',size=1)+
geom_line(aes(y=var_10),col='blue',size=1)+
geom_line(aes(y=bias_squared_10),col='green',size=1.5)+
theme_bw()+
labs(y = "")+
labs(x = "polynomial degree")+
theme(legend.position = "bottom")+
scale_color_discrete(labels = c("MSE", "Variance","Bias"))
ggplot(df1,aes(x=degree))+
geom_line(aes(y=mse_10),col='red',size=1)+
geom_line(aes(y=var_10),col='blue',size=1)+
geom_line(aes(y=bias_squared_10),col='green',size=1)+
theme_bw()+
labs(y = "")+
labs(x = "polynomial degree")+
theme(legend.position = "bottom")+
scale_color_discrete(labels = c("MSE", "Variance","Bias"))
ggplot(df1,aes(x=degree))+
geom_line(aes(y=mse_10),col='red',size=1)+
geom_line(aes(y=var_10),col='blue',size=1)+
geom_line(aes(y=bias_squared_10),col='green',size=1)+
theme_bw()+
labs(y = "")+
labs(x = "polynomial degree")+
theme(legend.position = "bottom")+
scale_color_manual(values = c("MSE", "Variance","Bias"))
ggplot(df1,aes(x=degree))+
geom_line(aes(y=mse_10),col='red',size=1)+
geom_line(aes(y=var_10),col='blue',size=1)+
geom_line(aes(y=bias_squared_10),col='green',size=1)+
theme_bw()+
labs(y = "")+
labs(x = "polynomial degree")+
theme(legend.position = "bottom")+
scale_color_manual(values = c("mse_10", "var_10","bias_squared_10"))
ggplot(df1,aes(x=degree))+
geom_line(aes(y=mse_10,col='red'),size=1)+
geom_line(aes(y=var_10,col='blue'),size=1)+
geom_line(aes(y=bias_squared_10,col='green'),size=1)+
theme_bw()+
labs(y = "")+
labs(x = "polynomial degree")+
theme(legend.position = "bottom")+
scale_color_manual(values = c("mse_10", "var_10","bias_squared_10"))
ggplot(df1,aes(x=degree))+
geom_line(aes(y=mse_10,col='red'),size=1)+
geom_line(aes(y=var_10,col='blue'),size=1)+
geom_line(aes(y=bias_squared_10,col='green'),size=1)+
theme_bw()+
labs(y = "")+
labs(x = "polynomial degree")+
theme(legend.position = "bottom")
ggplot(df1,aes(x=degree))+
geom_line(aes(y=mse_10,col='red'),size=1)+
geom_line(aes(y=var_10,col='blue'),size=1)+
geom_line(aes(y=bias_squared_10,col='green'),size=1)+
theme_bw()+
labs(y = "")+
labs(x = "polynomial degree")+
theme(legend.position = "bottom")+
scale_color_discrete(name = "Y series", labels = c("MSE", "Variance","Bias Square"))
ggplot(df1,aes(x=degree))+
geom_line(aes(y=mse_10,col='red'),size=1)+
geom_line(aes(y=var_10,col='blue'),size=1)+
geom_line(aes(y=bias_squared_10,col='green'),size=1)+
theme_bw()+
labs(y = "")+
labs(x = "polynomial degree")+
theme(legend.position = "left")+
scale_color_discrete(name = "Color", labels = c("MSE", "Variance","Bias Square"))
ggplot(df1,aes(x=degree))+
geom_line(aes(y=mse_10,col='red'),size=1)+
geom_line(aes(y=var_10,col='blue'),size=1)+
geom_line(aes(y=bias_squared_10,col='green'),size=1)+
theme_bw()+
labs(y = "")+
labs(x = "polynomial degree")+
theme(legend.position = "left")+
scale_color_discrete(name = "Color", labels = c("Variance", "Bias Square","MSE"))
ggplot(df1,aes(x=degree))+
geom_line(aes(y=mse_10,col='MSE'),size=1)+
geom_line(aes(y=var_10,col='Variance'),size=1)+
geom_line(aes(y=bias_squared_10,col='Bias Squared'),size=1)+
theme_bw()+
labs(y = "")+
labs(x = "polynomial degree")+
scale_colour_manual("",
breaks = c("MSE", "Variance", "Bias Squared"),
values = c("red", "green", "blue"))
ggplot(df1,aes(x=degree))+
geom_line(aes(y=mse_10,col='MSE'),size=1)+
geom_line(aes(y=var_10,col='Variance'),size=1)+
geom_line(aes(y=bias_squared_10,col='Bias Squared'),size=1)+
theme_bw()+
title("At x0 = 10")
ggplot(df1,aes(x=degree))+
geom_line(aes(y=mse_10,col='MSE'),size=1)+
geom_line(aes(y=var_10,col='Variance'),size=1)+
geom_line(aes(y=bias_squared_10,col='Bias Squared'),size=1)+
theme_bw()+
labs(title="At X0 = 10")
ggplot(df1,aes(x=degree))+
geom_line(aes(y=mse_10,col='MSE'),size=1)+
geom_line(aes(y=var_10,col='Variance'),size=1)+
geom_line(aes(y=bias_squared_10,col='Bias Squared'),size=1)+
theme_bw()+
labs(title="At X0 = 10")+
theme(plot.title = element_text(hjust = 0.5))
labs(y = "")+
labs(x = "polynomial degree")+
scale_colour_manual("",
breaks = c("MSE", "Variance", "Bias Squared"),
values = c("red", "green", "blue"))
ggplot(df1,aes(x=degree))+
geom_line(aes(y=mse_10,col='MSE'),size=1)+
geom_line(aes(y=var_10,col='Variance'),size=1)+
geom_line(aes(y=bias_squared_10,col='Bias Squared'),size=1)+
theme_bw()+
labs(title="At X0 = 10")+
labs(y = "")+
labs(x = "polynomial degree")+
scale_colour_manual("",
breaks = c("MSE", "Variance", "Bias Squared"),
values = c("red", "green", "blue"))
ggplot(df1,aes(x=degree))+
geom_line(aes(y=mse_10,col='MSE'),size=1)+
geom_line(aes(y=var_10,col='Variance'),size=1)+
geom_line(aes(y=bias_squared_10,col='Bias Squared'),size=1)+
theme_bw()+
labs(title="At X0 = 10")+
theme(plot.title = element_text(hjust = 0.5))+
labs(y = "")+
labs(x = "polynomial degree")+
scale_colour_manual("",
breaks = c("MSE", "Variance", "Bias Squared"),
values = c("red", "green", "blue"))
ggplot(df2,aes(x=degree))+
geom_line(aes(y=mse_16,col='MSE'),size=1)+
geom_line(aes(y=var_16,col='Variance'),size=1)+
geom_line(aes(y=bias_squared_16,col='Bias Squared'),size=1)+
theme_bw()+
labs(title="At X0 = 16")+
theme(plot.title = element_text(hjust = 0.5))+
labs(y = "")+
labs(x = "polynomial degree")+
scale_colour_manual("",
breaks = c("MSE", "Variance", "Bias Squared"),
values = c("red", "green", "blue"))
df2 <- data.frame(summary_16)
ggplot(df2,aes(x=degree))+
geom_line(aes(y=mse_16,col='MSE'),size=1)+
geom_line(aes(y=var_16,col='Variance'),size=1)+
geom_line(aes(y=bias_squared_16,col='Bias Squared'),size=1)+
theme_bw()+
labs(title="At X0 = 16")+
theme(plot.title = element_text(hjust = 0.5))+
labs(y = "")+
labs(x = "polynomial degree")+
scale_colour_manual("",
breaks = c("MSE", "Variance", "Bias Squared"),
values = c("red", "green", "blue"))
# Solution goes here -----------
library(ggplot2)
df1 <- data.frame(summary_10)
degree <- c(1:5)
ggplot(df1,aes(x=degree))+
geom_line(aes(y=mse_10,col='MSE'),size=1)+
geom_line(aes(y=var_10,col='Variance'),size=1)+
geom_line(aes(y=bias_squared_10,col='Bias Squared'),size=1)+
theme_bw()+
labs(title="At X0 = 10")+
theme(plot.title = element_text(hjust = 0.5))+
labs(y = "")+
labs(x = "polynomial degree")+
scale_colour_manual("",
breaks = c("MSE", "Variance", "Bias Squared"),
values = c("red", "green", "blue"))
df2 <- data.frame(summary_16)
ggplot(df2,aes(x=degree))+
geom_line(aes(y=mse_16,col='MSE'),size=1)+
geom_line(aes(y=var_16,col='Variance'),size=1)+
geom_line(aes(y=bias_squared_16,col='Bias Squared'),size=1)+
theme_bw()+
labs(title="At X0 = 16")+
theme(plot.title = element_text(hjust = 0.5))+
labs(y = "")+
labs(x = "polynomial degree")+
scale_colour_manual("",
breaks = c("MSE", "Variance", "Bias Squared"),
values = c("red", "green", "blue"))
# Solution goes here -----------
library(ggplot2)
df1 <- data.frame(summary_10)
degree <- c(1:5)
ggplot(df1,aes(x=degree))+
geom_line(aes(y=mse_10,col='MSE'),size=1)+
geom_line(aes(y=var_10,col='Variance'),size=1)+
geom_line(aes(y=bias_squared_10,col='Bias Squared'),size=1)+
theme_bw()+
labs(title="At X0 = 10")+
theme(plot.title = element_text(hjust = 0.5))+
labs(y = "")+
labs(x = "polynomial degree")+
scale_colour_manual("",
breaks = c("MSE", "Variance", "Bias Squared"),
values = c("red", "green", "blue"))
df2 <- data.frame(summary_16)
ggplot(df2,aes(x=degree))+
geom_line(aes(y=mse_16,col='MSE'),size=1)+
geom_line(aes(y=var_16,col='Variance'),size=1)+
geom_line(aes(y=bias_squared_16,col='Bias Squared'),size=1)+
theme_bw()+
labs(title="At X0 = 16")+
theme(plot.title = element_text(hjust = 0.5))+
labs(y = "")+
labs(x = "polynomial degree")+
scale_colour_manual("",
breaks = c("MSE", "Variance", "Bias Squared"),
values = c("red", "green", "blue"))
packages.used=c("rvest", "tibble",
"sentimentr", "gplots", "dplyr",
"tm", "syuzhet", "factoextra",
"beeswarm", "scales", "RColorBrewer",
"RANN", "topicmodels", "stringr")
# check packages that need to be installed.
packages.needed=setdiff(packages.used,
intersect(installed.packages()[,1],
packages.used))
# install additional packages
if(length(packages.needed)>0){
install.packages(packages.needed, dependencies = TRUE)
}
knitr::opts_chunk$set(echo = TRUE)
library(tm)
library(tm)
packages.used=c("rvest", "tibble", "qdap",
"sentimentr", "gplots", "dplyr",
"tm", "syuzhet", "factoextra",
"beeswarm", "scales", "RColorBrewer",
"RANN", "tm", "topicmodels")
# check packages that need to be installed.
packages.needed=setdiff(packages.used,
intersect(installed.packages()[,1],
packages.used))
# install additional packages
if(length(packages.needed)>0){
install.packages(packages.needed, dependencies = TRUE)
}
# load packages
library("rvest")
library("tibble")
# You may need to run
# sudo ln -f -s $(/usr/libexec/java_home)/jre/lib/server/libjvm.dylib /usr/local/lib
# in order to load qdap
library("qdap")
knitr::opts_chunk$set(echo = TRUE)
library(tm)
library(data.table)
library(tidytext)
install.packages("tidytext")
library(tm)
library(data.table)
library(tidytext)
library(tidyverse)
install.packages("tidyverse")
library(tm)
library(data.table)
library(tidytext)
library(tidyverse)
library(DT)
library(devtools)
install_github("trinker/qdapDictionaries")
install_github("trinker/qdapRegex")
install_github("trinker/qdapTools")
install_github("trinker/qdap")
# You may need to run
# sudo ln -f -s $(/usr/libexec/java_home)/jre/lib/server/libjvm.dylib /usr/local/lib
# in order to load qdap
library("qdap")
knitr::opts_chunk$set(echo = TRUE)
df <- data.frame(a = c(1, 1, NA, NA, 63),
b = c(2, -17, 11, 57, NA),
c = c(5, 9, 4, NA, NA))
apply(df,2,function(x)x[max(which(!is.na(x)))])
df
apply(df,2,function(x)x[tail(which(!is.na(x)))])
df
df
apply(df,2,function(x)x[tail(which(!is.na(x)))])
df[, lapply(.SD, function(x) tail(x[!is.na(x)],1))]
typeof(df)
df = as.data.table(df)
df <- data.frame(a = c(1, 1, NA, NA, 63),
b = c(2, -17, 11, 57, NA),
c = c(5, 9, 4, NA, NA))
df
install.packages("data.tree")
library(data.table)
load("C:\Users\okego\Desktop\Spring2020-Project2-group-6\output\QR_1519_rename.RData")
load("C:\\Users\\okego\\Desktop\\Spring2020-Project2-group-6\\output\\QR_1519_rename.RData")
View(QR_1519_rename)
df <- QR_1519_rename[1:7]
df
df <- QR_1519_rename[3:7]
df
library(data.table)
df = as.data.table(df)
df[lapply(.SD, function(x) tail(x[!is.na(x)],1)),]
apply(df,1,function(x)x[tail(which(!is.na(x)))])
df <- QR_1519_rename[3:7]
df1 <- apply(df,1,function(x)x[tail(which(!is.na(x)))])
df1
df <- data.frame(df)
df
df1 <- apply(df,2,function(x)x[max(which(!is.na(x)))])
df1
df1 <- apply(df,2,function(x)x[tail(which(!is.na(x)))])
df1
indx <- which(!is.na(df), arr.ind=TRUE)
df1 <- df[cbind(1:nrow(df1),tapply(indx[,2], indx[,1], FUN=max))]
df <- QR_1519_rename[3:7]
df <- data.frame(df)
indx <- which(!is.na(df), arr.ind=TRUE)
df1 <- df[cbind(1:nrow(df1),tapply(indx[,2], indx[,1], FUN=max))]
indx <- which(!is.na(df), arr.ind=TRUE)
df1 <- df[cbind(1:nrow(df),tapply(indx[,2], indx[,1], FUN=max))]
df1
ncol(df)
ncol(QR_1519_rename)
df <- QR_1519_rename[3:7]
df <- data.frame(df)
indx <- which(!is.na(df), arr.ind=TRUE)
df1 <- df[cbind(1:nrow(df),tapply(indx[,2], indx[,1], FUN=max))]
df1
indx
shiny::runApp('C:/Users/okego/Desktop/Spring2020-Project2-group-6/app1')
shiny::runApp()
shiny::runApp()
load("C:/Users/59446/Documents/GitHub/Spring2020-Project2-group-6/output/house_processed.RData")
View(processed_price)
library(tigris)
char_zips <- zctas(cb = TRUE, starts_with = "1")
processed_price<-mutate(processed_price,price = median(c(2,3,4,5,6,7),na.rm = T))
names(processed_price)
processed_price<-mutate(processed_price,price = median(c(`ONE FAMILY DWELLINGS`,`TWO FAMILY DWELLINGS`,`THREE FAMILY DWELLINGS`,`RENTALS - WALKUP APARTMENTS`,`RENTALS - ELEVATOR APARTMENTS`,`RENTALS - 4-10 UNIT`),na.rm = T))
a<-processed_price%>%select(2:7)
View(a)
b<-rowM
b<-rowMeans(a)
b<-rowMeans(a,na.rm = T)
processed_price<-processed_price%>%mutate(price = b)
View(processed_price)
char_zips <- geo_join(char_zips,
processed_price,
by_sp = "GEOID10",
by_df = 'ZIP CODE',
how = "inner")
save(processed_price,file ='C:/Users/59446/Documents/GitHub/Spring2020-Project2-group-6/output/zip_code.RData')
save(char_zips,file ='C:/Users/59446/Documents/GitHub/Spring2020-Project2-group-6/output/zip_code.RData')
runApp()
View(processed_price)
runApp()
View(char_zips)
runApp()
runApp()
shiny::runApp()
